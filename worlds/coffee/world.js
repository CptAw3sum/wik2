// Generated by CoffeeScript 1.9.2
var FirePlace, Log, O, Thing, find, o, w,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Thing = (function() {
  function Thing(id1, c1) {
    this.id = id1;
    this.c = c1;
  }

  Thing.prototype.find = function(id) {
    var i;
    return ((function() {
      var j, len, ref, results;
      ref = this.c;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        if (i.id = id) {
          results.push(i);
        }
      }
      return results;
    }).call(this))[0];
  };

  return Thing;

})();

Log = (function() {
  function Log() {}

  Log.prototype.d = "A wooden log";

  return Log;

})();

FirePlace = (function(superClass) {
  extend(FirePlace, superClass);

  function FirePlace() {
    return FirePlace.__super__.constructor.apply(this, arguments);
  }

  FirePlace.prototype.lit = false;

  FirePlace.prototype.light = function() {
    this.lit = true;
    return 'The fire is lit';
  };

  return FirePlace;

})(Thing);

w = [];

O = function(id, c) {
  var t;
  t = o(id, c);
  return w.push(t);
};

o = function(id, c) {
  return new Thing(id, c);
};

O('Home', [o('Living Room', [new FirePlace('', [new Log, new Log])]), o('Hall')]);

find = function(id) {
  var i;
  return ((function() {
    var j, len, results;
    results = [];
    for (j = 0, len = w.length; j < len; j++) {
      i = w[j];
      if (i.id = id) {
        results.push(i);
      }
    }
    return results;
  })())[0];
};
